name: Build and Push All Docker Images

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ github.repository_owner }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4

      - name: Generate Docker matrix
        id: set-matrix
        run: |
          matrix=$(find docker -mindepth 3 -maxdepth 3 -name Dockerfile | \
            sed -E 's|docker/(.*)/([^/]+)/Dockerfile|{"component":"\1","role":"\2"}|' | \
            jq -s .)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build-and-push:
    needs: generate-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/${{ matrix.component }}/${{ matrix.role }}
          file: ./docker/${{ matrix.component }}/${{ matrix.role }}/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/devbase-${{ matrix.component }}-${{ matrix.role }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/devbase-${{ matrix.component }}-${{ matrix.role }}:${{ env.BUILD_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/devbase-${{ matrix.component }}-${{ matrix.role }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/devbase-${{ matrix.component }}-${{ matrix.role }}:${{ github.run_number }}
